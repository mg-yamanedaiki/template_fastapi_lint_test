version: 2.1

executors:
  ubuntu:
    machine:
      image: ubuntu-2004:current
  python:
    docker:
      - image: cimg/python:3.9.16

jobs:
  setup:
    executor: ubuntu
    shell: /bin/bash
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up -d
          command: docker-compose up -d
      - run:
          name: docker-compose ps
          command: docker-compose ps
      - run:
          name: docker-compose exec app poetry --version
          command: docker-compose exec app poetry --version
      - run:
          name: docker-compose exec app poetry install --no-ansi
          command: docker-compose exec app poetry install --no-ansi
      - run:
          name: docker-compose exec app python --version
          command: docker-compose exec app python --version
      - run:
          name: ls -a
          command: ls -a
      # - run:
      #     name: リント実行
      #     command: docker-compose exec app poetry run inv lint
      - persist_to_workspace:
          root: .
          paths:
            - .
      # - run:
      #     name: docker-compose exec app poetry shell
      #     command: docker-compose exec app poetry shell

  lint:
    executor: ubuntu
    shell: /bin/bash
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: docker-compose ps
          command: docker-compose ps
      - run:
          name: リント実行
          command: docker-compose exec app poetry run inv lint

  deploy-dev:
    executor: ubuntu
    shell: /bin/bash
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/app
      - add_ssh_keys
      - run:
          name: SSHで最新状態を適用
          command: >
            ssh ${USER_NAME}@${HOST_NAME} "cd ~/workspace/atd_00_template_api_python && ./scripts/deploy-develop.sh"
workflows:
  lint_deploy:
    jobs:
      - setup:
          filters:
            branches:
              ignore:
               - main
               - master
               - develop
      - lint:
          requires:
            - setup
          filters:
            branches:
              ignore:
                - main
                - master
                - develop
      - deploy-dev:
          filters:
            branches:
              only:
                - develop
